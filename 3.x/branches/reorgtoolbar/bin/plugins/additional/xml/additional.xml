<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<package name="Additional" lib="libadditional" icon="calendar16x16.xpm" desc="wxWidgets additional controls">
  
  <objectinfo class="wxCalendarCtrl" icon="calendar.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_calendar</property>
    <property name="style" type="bitlist">
      <option name="wxCAL_SUNDAY_FIRST"               help="Show Sunday as the first day in the week." />
      <option name="wxCAL_MONDAY_FIRST"               help="Show Monday as the first day in the week." />
      <option name="wxCAL_SHOW_HOLIDAYS"              help="Highlight holidays in the calendar." />
      <option name="wxCAL_NO_YEAR_CHANGE"             help="Disable the year changing." />
      <option name="wxCAL_NO_MONTH_CHANGE"            help="Disable the month (and, implicitly, the year) changing." />
      <option name="wxCAL_SHOW_SURROUNDING_WEEKS"     help="Show the neighbouring weeks in the previous and next months." />
      <option name="wxCAL_SEQUENTIAL_MONTH_SELECTION" help="Use alternative, more compact, style for the month and year selection controls." />wxCAL_SHOW_HOLIDAYS</property>
    <event name="OnCalendar" class="wxCalendarEvent" help="A day was double clicked in the calendar." />
    <event name="OnCalendarSelChanged" class="wxCalendarEvent" help="The selected date changed." />
    <event name="OnCalendarDay" class="wxCalendarEvent" help="The selected day changed." />
    <event name="OnCalendarMonth" class="wxCalendarEvent" help="The selected month changed." />
    <event name="OnCalendarYear" class="wxCalendarEvent" help="The selected year changed." />
    <event name="OnCalendarWeekDayClicked" class="wxCalendarEvent" help="User clicked on the week day header." />
  </objectinfo>

  <objectinfo class="wxDatePickerCtrl" icon="datepicker.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_datePicker</property>
    <property name="style" type="bitlist">
      <option name="wxDP_SPIN"        help="Creates a control without a month calendar drop down but with spin-control-like arrows to change individual date components. This style is not supported by the generic version." />
      <option name="wxDP_DROPDOWN"    help="Creates a control with a month calendar drop-down part from which the user can select a date." />
      <option name="wxDP_SHOWCENTURY" help="Forces display of the century in the default date format. Without this style the century could be displayed, or not, depending on the default date representation in the system." />
      <option name="wxDP_ALLOWNONE"   help="With this style, the control allows the user to not enter any valid date at all. Without it - the default - the control always has some valid date." />
      <option name="wxDP_DEFAULT"     help="Creates a control with the style that is best supported for the current platform (currently wxDP_SPIN under Windows and wxDP_DROPDOWN elsewhere)." />wxDP_DEFAULT</property>
	<event name="OnDateChanged" class="wxDateEvent" help="This event fires when the user changes the current selection in the control." />
  </objectinfo>

  <objectinfo class="wxColourPickerCtrl" icon="colourPickerIcon.xpm" type="widget">
        <inherits class="wxWindow"/>
        <property name="name" type="text">m_wxColourPickerCtrl</property>
        <property name="style" type="bitlist">
          <option name="wxCLRP_DEFAULT_STYLE" help="The default style: 0."/>
          <option name="wxCLRP_USE_TEXTCTRL" help="Creates a text control to the left of the picker button which is completely managed by the wxColourPickerCtrl and which can be used by the user to specify a colour. The text control is automatically synchronized with button's value. Use functions defined in wxPickerBase to modify the text control."/>
          <option name="wxCLRP_SHOW_LABEL" help="Shows the colour in HTML form (AABBCC) as colour button label (instead of no label at all)."/>
          wxCLRP_DEFAULT_STYLE
        </property>
        <property name="colour" type="wxColour"/>
        <event name="OnColourChanged" class="wxColourPickerEvent" help="The user changed the colour selected in the control either using the button or using text control (see wxCLRP_USE_TEXTCTRL; note that in this case the event is fired only if the user's input is valid, i.e. recognizable)."/>
  </objectinfo>

  <objectinfo class="wxHtmlWindow" icon="htmlwin.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_htmlWin</property>
    <property name="style" type="bitlist">
      <option name="wxHW_SCROLLBAR_NEVER" help="Never display scrollbars, not even when the page is larger than the window." />
      <option name="wxHW_SCROLLBAR_AUTO"  help="Display scrollbars only if page's size exceeds window's size." />
      <option name="wxHW_NO_SELECTION"    help="Don't allow the user to select text." />wxHW_SCROLLBAR_AUTO</property>
	<event name="OnHtmlCellClicked" class="wxHtmlCellEvent" help="A wxHtmlCell was clicked." />
	<event name="OnHtmlCellHover" class="wxHtmlCellEvent" help="The mouse passed over a wxHtmlCell." />
	<event name="OnHtmlLinkClicked" class="wxHtmlLinkEvent" help="A wxHtmlCell which contains an hyperlink was clicked." />
  </objectinfo>

  <objectinfo class="wxTreeCtrl" icon="tree_ctrl.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_treeCtrl</property>
    <property name="style" type="bitlist">
      <option name="wxTR_EDIT_LABELS"             help="Use this style if you wish the user to be able to edit labels in the tree control." />
      <option name="wxTR_NO_BUTTONS"              help="For convenience to document that no buttons are to be drawn." />
      <option name="wxTR_HAS_BUTTONS"             help="Use this style to show + and - buttons to the left of parent items." />
      <option name="wxTR_TWIST_BUTTONS"           help="??" />
      <option name="wxTR_NO_LINES"                help="Use this style to hide vertical level connectors." />
      <option name="wxTR_FULL_ROW_HIGHLIGHT"      help="Use this style to have the background colour and the selection highlight extend over the entire horizontal row of the tree control window. (This flag is ignored under Windows unless you specify wxTR_NO_LINES as well.)" />
      <option name="wxTR_LINES_AT_ROOT"           help="Use this style to show lines between root nodes. Only applicable if wxTR_HIDE_ROOT is set and wxTR_NO_LINES is not set." />
      <option name="wxTR_HIDE_ROOT"               help="Use this style to suppress the display of the root node, effectively causing the first-level nodes to appear as a series of root nodes." />
      <option name="wxTR_ROW_LINES"               help="Use this style to draw a contrasting border between displayed rows." />
      <option name="wxTR_HAS_VARIABLE_ROW_HEIGHT" help="Use this style to cause row heights to be just big enough to fit the content. If not set, all rows use the largest row height. The default is that this flag is unset. Generic only." />
      <option name="wxTR_SINGLE"                  help="For convenience to document that only one item may be selected at a time. Selecting another item causes the current selection, if any, to be deselected. This is the default." />
      <option name="wxTR_MULTIPLE"                help="Use this style to allow a range of items to be selected. If a second range is selected, the current range, if any, is deselected." />
      <option name="wxTR_EXTENDED"                help="Use this style to allow disjoint items to be selected. (Only partially implemented; may not work in all cases.)" />
      <option name="wxTR_DEFAULT_STYLE"           help="The set of flags that are closest to the defaults for the native control for a particular toolkit." />wxTR_DEFAULT_STYLE</property>
	<event name="OnTreeBeginDrag" class="wxTreeEvent" help="Begin dragging with the left mouse button." />
	<event name="OnTreeBeginRDrag" class="wxTreeEvent" help="Begin dragging with the right mouse button." />
	<event name="OnTreeEndDrag" class="wxTreeEvent" help="End dragging with the left or right mouse button." />
	<event name="OnTreeBeginLabelEdit" class="wxTreeEvent" help="Begin editing a label. This can be prevented by calling Veto()." />
	<event name="OnTreeEndLabelEdit" class="wxTreeEvent" help="Finish editing a label. This can be prevented by calling Veto()." />
	<event name="OnTreeDeleteItem" class="wxTreeEvent" help="Delete an item." />
	<event name="OnTreeGetInfo" class="wxTreeEvent" help="Request information from the application." />
	<event name="OnTreeSetInfo" class="wxTreeEvent" help="Information is being supplied." />
	<event name="OnTreeItemActivated" class="wxTreeEvent" help="The item has been activated, i.e. chosen by double clicking it with mouse or from keyboard." />
	<event name="OnTreeItemCollapsed" class="wxTreeEvent" help="The item has been collapsed." />
	<event name="OnTreeItemCollapsing" class="wxTreeEvent" help="The item is being collapsed. This can be prevented by calling Veto()." />
	<event name="OnTreeItemExpanded" class="wxTreeEvent" help="The item has been expanded." />
	<event name="OnTreeItemExpanding" class="wxTreeEvent" help="The item is being expanded. This can be prevented by calling Veto()." />
	<event name="OnTreeItemRightClick" class="wxTreeEvent" help="The user has clicked the item with the right mouse button" />
	<event name="OnTreeItemMiddleClick" class="wxTreeEvent" help="The user has clicked the item with the middle mouse button." />
	<event name="OnTreeSelChanged" class="wxTreeEvent" help="Selection has changed." />
	<event name="OnTreeSelChanging" class="wxTreeEvent" help="Selection is changing. This can be prevented by calling Veto()." />
	<event name="OnTreeKeyDown" class="wxTreeEvent" help="A key has been pressed." />
	<event name="OnTreeItemGetTooltip" class="wxTreeEvent" help="The opportunity to set the item tooltip is being given to the application (call wxTreeEvent::SetToolTip). Windows only." />
	<event name="OnTreeItemMenu" class="wxTreeEvent" help="The context menu for the selected item has been requested, either by a right click or by using the menu key." />
	<event name="OnTreeStateImageClick" class="wxTreeEvent" help="The state image has been clicked. Windows only." />
  </objectinfo>

  <objectinfo class="wxRadioButton" icon="radio_button.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_radioBtn</property>
    <property name="label" type="wxString_i18n">RadioBtn</property>
    <property name="style" type="bitlist">
      <option name="wxRB_GROUP"        help="Marks the beginning of a new group of radio buttons." />
      <option name="wxRB_SINGLE"       help="In some circumstances, radio buttons that are not consecutive siblings trigger a hang bug in Windows (only). If this happens, add this style to mark the button as not belonging to a group, and implement the mutually-exclusive group behaviour yourself." />
      <option name="wxRB_USE_CHECKBOX" help="Use a checkbox button instead of radio button (currently supported only on PalmOS)." /></property>
    <property name="value" type="bool">0</property>
	<event name="OnRadioButton" class="wxCommandEvent" help="Handles a toggle button click event." />
  </objectinfo>

  <objectinfo class="wxToggleButton" icon="toggle_button.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_toggleBtn</property>
    <property name="label" type="wxString_i18n">Toggle me!</property>
    <property name="value" type="bool">0</property>
	<event name="OnToggleButton" class="wxCommandEvent" help="Process a wxEVT_COMMAND_RADIOBUTTON_SELECTED event, when the radiobutton is clicked." />
  </objectinfo>

  <objectinfo class="wxScrollBar" icon="scrollbar.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_scrollBar</property>
    <property name="value" help="The position of the scrollbar in scroll units." type="uint">0</property>
    <property name="range" help="The maximum position of the scrollbar." type="uint">100</property>
    <property name="thumbsize" help="The size of the thumb, or visible portion of the scrollbar, in scroll units." type="uint">1</property>
    <property name="pagesize" help="This is the number of scroll units that will be scrolled when the user pages up or down." type="uint">1</property>
    <property name="style" type="option">
      <option name="wxSB_HORIZONTAL" help="Specifies a horizontal scrollbar." />
      <option name="wxSB_VERTICAL"   help="Specifies a vertical scrollbar." />wxSB_HORIZONTAL</property>
	<event name="OnScroll" class="wxScrollEvent" help="Process all scroll events." />
	<event name="OnScrollTop" class="wxScrollEvent" help="Process wxEVT_SCROLL_TOP scroll-to-top events (minimum position)." />
	<event name="OnScrollBottom" class="wxScrollEvent" help="Process wxEVT_SCROLL_BOTTOM scroll-to-bottom events (maximum position)." />
	<event name="OnScrollLineUp" class="wxScrollEvent" help="Process wxEVT_SCROLL_LINEUP line up events." />
	<event name="OnScrollLineDown" class="wxScrollEvent" help="Process wxEVT_SCROLL_LINEDOWN line down events." />
	<event name="OnScrollPageUp" class="wxScrollEvent" help="Process wxEVT_SCROLL_PAGEUP page up events." />
	<event name="OnScrollPageDown" class="wxScrollEvent" help="Process wxEVT_SCROLL_PAGEDOWN page down events." />
	<event name="OnScrollThumbTrack" class="wxScrollEvent" help="Process wxEVT_SCROLL_THUMBTRACK thumbtrack events (frequent events sent as the user drags the thumbtrack)." />
	<event name="OnScrollThumbRelease" class="wxScrollEvent" help="Process wxEVT_SCROLL_THUMBRELEASE thumb release events." />
	<event name="OnScrollChanged" class="wxScrollEvent" help="Process wxEVT_SCROLL_CHANGED end of scrolling events (MSW only)." />
	<event name="OnCommandScroll" class="wxScrollEvent" help="Process all scroll events. Variant taking a window identifier." />
	<event name="OnCommandScrollTop" class="wxScrollEvent" help="Process wxEVT_SCROLL_TOP scroll-to-top events (minimum position). Variant taking a window identifier." />
	<event name="OnCommandScrollBottom" class="wxScrollEvent" help="Process wxEVT_SCROLL_BOTTOM scroll-to-bottom events (maximum position). Variant taking a window identifier." />
	<event name="OnCommandScrollLineUp" class="wxScrollEvent" help="Process wxEVT_SCROLL_LINEUP line up events. Variant taking a window identifier." />
	<event name="OnCommandScrollLineDown" class="wxScrollEvent" help="Process wxEVT_SCROLL_LINEDOWN line down events. Variant taking a window identifier." />
	<event name="OnCommandScrollPageUp" class="wxScrollEvent" help="Process wxEVT_SCROLL_PAGEUP page up events. Variant taking a window identifier." />
	<event name="OnCommandScrollPageDown" class="wxScrollEvent" help="Process wxEVT_SCROLL_PAGEDOWN page down events. Variant taking a window identifier." />
	<event name="OnCommandScrollThumbTrack" class="wxScrollEvent" help="Process wxEVT_SCROLL_THUMBTRACK thumbtrack events (frequent events sent as the user drags the thumbtrack). Variant taking a window identifier." />
	<event name="OnCommandScrollThumbRelease" class="wxScrollEvent" help="Process wxEVT_SCROLL_THUMBRELEASE thumb release events. Variant taking a window identifier." />
	<event name="OnCommandScrollChanged" class="wxScrollEvent" help="Process wxEVT_SCROLL_CHANGED end of scrolling events (MSW only). Variant taking a window identifier." />
  </objectinfo>
  
  <objectinfo class="wxGrid" icon="grid.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_grid</property>
    <property name="rows" type="uint" help="Number of Rows.">5</property>
    <property name="cols" type="uint" help="Number of Columns.">5</property>
	<event name="OnGridCellLeftClick" class="wxGridEvent" help="The user clicked a cell with the left mouse button. Processes a wxEVT_GRID_CELL_LEFT_CLICK." />
	<event name="OnGridCellRightClick" class="wxGridEvent" help="The user clicked a cell with the right mouse button. Processes a wxEVT_GRID_CELL_RIGHT_CLICK." />
	<event name="OnGridCellLeftDClick" class="wxGridEvent" help="The user double-clicked a cell with the left mouse button. Processes a wxEVT_GRID_CELL_LEFT_DCLICK." />
	<event name="OnGridCellRightDClick" class="wxGridEvent" help="The user double-clicked a cell with the right mouse button. Processes a wxEVT_GRID_CELL_RIGHT_DCLICK." />
	<event name="OnGridLabelLeftClick" class="wxGridEvent" help="The user clicked a label with the left mouse button. Processes a wxEVT_GRID_LABEL_LEFT_CLICK." />
	<event name="OnGridLabelRightClick" class="wxGridEvent" help="The user clicked a label with the right mouse button. Processes a wxEVT_GRID_LABEL_RIGHT_CLICK." />
	<event name="OnGridLabelLeftDClick" class="wxGridEvent" help="The user double-clicked a label with the left mouse button. Processes a wxEVT_GRID_LABEL_LEFT_DCLICK." />
	<event name="OnGridLabelRightDClick" class="wxGridEvent" help="The user double-clicked a label with the right mouse button. Processes a wxEVT_GRID_LABEL_RIGHT_DCLICK." />
	<event name="OnGridCellChange" class="wxGridEvent" help="The user changed the data in a cell. Processes a wxEVT_GRID_CELL_CHANGE." />
	<event name="OnGridSelectCell" class="wxGridEvent" help="The user moved to, and selected a cell. Processes a wxEVT_GRID_SELECT_CELL." />
	<event name="OnGridEditorHidden" class="wxGridEvent" help="The editor for a cell was hidden. Processes a wxEVT_GRID_EDITOR_HIDDEN." />
	<event name="OnGridEditorShown" class="wxGridEvent" help="The editor for a cell was shown. Processes a wxEVT_GRID_EDITOR_SHOWN." />
	<event name="OnGridCmdCellLeftClick" class="wxGridEvent" help="The user clicked a cell with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_LEFT_CLICK." />
	<event name="OnGridCmdCellRightClick" class="wxGridEvent" help="The user clicked a cell with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_RIGHT_CLICK." />
	<event name="OnGridCmdCellLeftDClick" class="wxGridEvent" help="The user double-clicked a cell with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_LEFT_DCLICK." />
	<event name="OnGridCmdCellRightDClick" class="wxGridEvent" help="The user double-clicked a cell with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_RIGHT_DCLICK." />
	<event name="OnGridCmdLabelLeftClick" class="wxGridEvent" help="The user clicked a label with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_LEFT_CLICK" />
	<event name="OnGridCmdLabelRightClick" class="wxGridEvent" help="The user clicked a label with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_RIGHT_CLICK." />
	<event name="OnGridCmdLabelLeftDClick" class="wxGridEvent" help="The user double-clicked a label with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_LEFT_DCLICK." />
	<event name="OnGridCmdLabelRightDClick" class="wxGridEvent" help="The user double-clicked a label with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_RIGHT_DCLICK." />
	<event name="OnGridCmdCellChange" class="wxGridEvent" help="The user changed the data in a cell; variant taking a window identifier. Processes a wxEVT_GRID_CELL_CHANGE." />
	<event name="OnGridCmdSelectCell" class="wxGridEvent" help="The user moved to, and selected a cell; variant taking a window identifier. Processes a wxEVT_GRID_SELECT_CELL." />
	<event name="OnGridCmdEditorHidden" class="wxGridEvent" help="The editor for a cell was hidden; variant taking a window identifier. Processes a wxEVT_GRID_EDITOR_HIDDEN." />
	<event name="OnGridCmdEditorShown" class="wxGridEvent" help="The editor for a cell was shown; variant taking a window identifier. Processes a wxEVT_GRID_EDITOR_SHOWN." />
	<event name="OnGridColSize" class="wxGridSizeEvent" help="The user resized a column by dragging it. Processes a wxEVT_GRID_COL_SIZE." />
	<event name="OnGridRowSize" class="wxGridSizeEvent" help="The user resized a row by dragging it. Processes a wxEVT_GRID_ROW_SIZE." />
	<event name="OnGridCmdColSize" class="wxGridSizeEvent" help="The user resized a column by dragging it; variant taking a window identifier. Processes a wxEVT_GRID_COL_SIZE." />
	<event name="OnGridCmdRowSize" class="wxGridSizeEvent" help="The user resized a row by dragging it; variant taking a window identifier. Processes a wxEVT_GRID_ROW_SIZE." />
	<event name="OnGridRangeSelect" class="wxGridRangeSelectEvent" help="The user selected a group of contiguous cells. Processes a wxEVT_GRID_RANGE_SELECT." />
	<event name="OnGridCmdRangeSelect" class="wxGridRangeSelectEvent" help="The user selected a group of contiguous cells; variant taking a window identifier. Processes a wxEVT_GRID_RANGE_SELECT." />
	<event name="OnGridEditorCreated" class="wxGridEditorCreatedEvent" help="The editor for a cell was created. Processes a wxEVT_GRID_EDITOR_CREATED." />
	<event name="OnGridCmdEditorCreated" class="wxGridEditorCreatedEvent" help="The editor for a cell was created; variant taking a window identifier. Processes a wxEVT_GRID_EDITOR_CREATED." />
  </objectinfo>

  <objectinfo class="wxSpinCtrl" icon="spin_ctrl.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_spinCtrl</property>
    <property name="value" type="wxString"></property>
    <property name="min" type="int"     help="Minimal value.">0</property>
    <property name="max" type="int"     help="Maximal value.">10</property>
    <property name="initial" type="uint" help="Initial value.">0</property>
    <property name="style" type="bitlist">
      <option name="wxSP_ARROW_KEYS"     help="The user can use arrow keys to change the value." />
      <option name="wxSP_WRAP"           help="The value wraps at the minimum and maximum." />wxSP_ARROW_KEYS</property>
	<event name="OnSpinCtrl" class="wxSpinEvent" help="Generated whenever the numeric value of the spinctrl is updated." />
	<event name="OnSpinCtrlText" class="wxCommandEvent" help="Generated whenever the user modifies the text in the edit part of the spin control directly." />
  </objectinfo>

  <objectinfo class="wxSpinButton" icon="spinbtn.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_spinBtn</property>
    <property name="style" type="bitlist">
      <option name="wxSP_HORIZONTAL" help="Specifies a horizontal spin button (note that this style is not supported in wxGTK)." />
      <option name="wxSP_VERTICAL"   help="Specifies a vertical spin button." />
      <option name="wxSP_ARROW_KEYS" help="The user can use arrow keys to change the value." />
      <option name="wxSP_WRAP"       help="The value wraps at the minimum and maximum." /></property>
	<event name="OnSpin" class="wxSpinEvent" help="Generated whenever an arrow is pressed." />
	<event name="OnSpinUp" class="wxSpinEvent" help="Generated when left/up arrow is pressed." />
	<event name="OnSpinDown" class="wxSpinEvent" help="Generated when right/down arrow is pressed." />
  </objectinfo>

  <objectinfo class="wxCheckListBox" icon="checkbox.xpm" type="widget">
    <inherits class="wxWindow" />
    <property name="name" type="text">m_checkList</property>
    <property name="style" type="bitlist">
      <option name="wxLB_SINGLE"    help="Single-selection list." />
      <option name="wxLB_MULTIPLE"  help="Multiple-selection list: the user can toggle multiple items on and off." />
      <option name="wxLB_EXTENDED"  help="Extended-selection list: the user can select multiple items using the SHIFT key and the mouse or special key combinations." />
      <option name="wxLB_HSCROLL"   help="Create horizontal scrollbar if contents are too wide (Windows only)." />
      <option name="wxLB_ALWAYS_SB" help="Always show a vertical scrollbar." />
      <option name="wxLB_NEEDED_SB" help="Only create a vertical scrollbar if needed." />
      <option name="wxLB_SORT"      help="The listbox contents are sorted in alphabetical order." /></property>
    <property name="choices" type="stringlist" help="List of default values." />
	<event name="OnCheckListBoxToggled" class="wxCommandEvent" help="Process a wxEVT_COMMAND_CHECKLISTBOX_TOGGLED event, when an item in the check list box is checked or unchecked." />
	<event name="OnCheckListBox" class="wxCommandEvent" help="Process a wxEVT_COMMAND_LISTBOX_SELECTED event, when an item on the list is selected." />
	<event name="OnCheckListBoxDClick" class="wxCommandEvent" help="Process a wxEVT_COMMAND_LISTBOX_DOUBLECLICKED event, when the listbox is double-clicked." />
  </objectinfo>

</package>
