<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<package name="default" desc="Default objects, do not edit this file">
  <objectinfo class="Project" smallIcon="project.xpm" type="project">
    <property name="name" type="text">MyProject</property>
    <property name="path" type="path" help="The path to generated files">.</property>
    <property name="file" type="text" help="The filenames for generated files" />
    <property name="relative_path" type="bool" help="Use relative paths for external files ( e.g. image files )">
		1
	</property>
	<property name="first_id" type="text" help="All GUI controls have an interger ID, this is the value for the first control, each additional control with increment by 1.">
		1000
	</property>
    <property name="code_generation" type="bitlist">
      <option name="C++" help="Generate C++ Code" />
      <option name="XRC" help="Generate XRC Code"/>
      C++
	</property>
	<category name="C++ Properties">
		<property name="use_enum" type="bool" help="For C++ Only. Generate an enumeration for control IDs instead of a list of #defines">0</property>
		<property name="internationalize" type="bool" help="For C++ Only. Generate strings with _() macro instead of wxT() macro. This allows for translation.">0</property>
		<property name="use_microsoft_bom" type="bool" help="For C++ and WXMSW Only. Files are generated with UTF-8 encoding. Microsoft compiliers expect a specific byte sequence at the beginning of a file. GCC does NOT expect this. Only set this to true when using a Microsoft compiler.">0</property>
		<property name="precompiled_header" type="text" help="For C++ Only. Precompiled header to include at the top of the generated source file. Define WX_PRECOMP when compiling to use a precompiled header.">wx/wxprec.h</property>
		<property name="class_decoration" type="parent" help="For C++ Only. Used to decorate classes with DLL export macros.">
		  <child name="decoration" help="The name of the macro or the dll export decoration."/>
		  <child name="header" help="Optional header file where the export macro is defined."/>
	    </property>
		<property name="encoding" type="option" help="">
		  <option name="UTF-8" />
		  <option name="ANSI" />UTF-8
		</property>
		<property name="namespace" type="stringlist" help="For C++ Only. Namespaces to wrap class declarations in."></property>
	</category>
	<category name="XRC Properties">
		<property name="bitmaps"	type="stringlist"	help="For XRC Only. A list of files to generate as wxBitmaps."/>
		<property name="icons"		type="stringlist"	help="For XRC Only. A list of files to generate as wxIcons."/>
	</category>
  </objectinfo>
  <objectinfo class="C++" smallIcon="c++.png" type="interface">
    <property name="permission" type="option" hidden="1">
      <option name="none" />
      <option name="private" />
      <option name="protected" />
      <option name="public" />protected</property>
  </objectinfo>
  <objectinfo class="wxWindow" smallIcon="wxwindow.png" type="interface">
    <property name="id" type="macro">wxID_ANY</property>
    <property name="pos" type="wxPoint"         help="Window position. The default is (-1, -1) which indicates that wxWidgets should generate a default position for the window."/>
    <property name="size" type="wxSize"         help="Window size. The default is (-1, -1) which indicates that wxWidgets should generate a default size for the window."/>
    <property name="minimum_size" type="wxSize" help="Sets the minimum size of the window, to indicate to the sizer layout mechanism that this is the minimum required size."/>
    <property name="maximum_size" type="wxSize" help="Sets the maximum size of the window, to indicate to the sizer layout mechanism that this is the maximum allowable size."/>
    <property name="font" type="wxFont"         help="Sets the font for this window. This should not be use for a parent window if you don't want its font to be inherited by its children"/>
    <property name="fg" type="wxColour"         help="Sets the foreground colour of the window."/>
    <property name="bg" type="wxColour"         help="Sets the background colour of the window."/>
    <property name="window_style" type="bitlist">
      <option name="wxSIMPLE_BORDER"            help="Displays a thin border around the window. wxBORDER is the old name for this style."/>
      <option name="wxDOUBLE_BORDER"            help="Displays a double border. Windows and Mac only."/>
      <option name="wxSUNKEN_BORDER"            help="Displays a sunken border."/>
      <option name="wxRAISED_BORDER"            help="Displays a raised border."/>
      <option name="wxSTATIC_BORDER"            help="Displays a border suitable for a static control. Windows only."/>
      <option name="wxNO_BORDER"                help="Displays no border, overriding the default border style for the window."/>
      <option name="wxTRANSPARENT_WINDOW"       help="The window is transparent, that is, it will not receive paint events. Windows only."/>
      <option name="wxTAB_TRAVERSAL"            help="Use this to enable tab traversal for non-dialog windows."/>
      <option name="wxWANTS_CHARS"              help="Use this to indicate that the window wants to get all char/key events for all keys - even for keys like TAB or ENTER which are usually used for dialog navigation and which wouldn't be generated without this style. If you need to use this style in order to get the arrows or etc., but would still like to have normal keyboard navigation take place, you should create and send a wxNavigationKeyEvent in response to the key events for Tab and Shift-Tab."/>
      <option name="wxVSCROLL"                  help="Use this style to enable a vertical scrollbar."/>
      <option name="wxHSCROLL"                  help="Use this style to enable a horizontal scrollbar."/>
      <option name="wxALWAYS_SHOW_SB"           help="If a window has scrollbars, disable them instead of hiding them when they are not needed (i.e. when the size of the window is big enough to not require the scrollbars to navigate it). This style is currently only implemented for wxMSW and wxUniversal and does nothing on the other platforms."/>
      <option name="wxCLIP_CHILDREN"            help="Use this style to eliminate flicker caused by the background being repainted, then children being painted over them. Windows only."/>
      <option name="wxFULL_REPAINT_ON_RESIZE"   help="Use this style to force a complete redraw of the window whenever it is resized instead of redrawing just the part of the window affected by resizing. Note that this was the behaviour by default before 2.5.1 release and that if you experience redraw problems with code which previously used to work you may want to try this. Currently this style applies on GTK+ 2 and Windows only, and full repainting is always done on other platforms."/>
    </property>
    <property name="window_extra_style" type="bitlist">
      <option name="wxWS_EX_VALIDATE_RECURSIVELY"   help="By default, Validate/TransferDataTo/FromWindow() only work on direct children of the window (compatible behaviour). Set this flag to make them recursively descend into all subwindows." />
      <option name="wxWS_EX_BLOCK_EVENTS"           help="wxCommandEvents and the objects of the derived classes are forwarded to the parent window and so on recursively by default. Using this flag for the given window allows to block this propagation at this window, i.e. prevent the events from being propagated further upwards. Dialogs have this flag on by default." />
      <option name="wxWS_EX_TRANSIENT"              help="Don't use this window as an implicit parent for the other windows: this must be used with transient windows as otherwise there is the risk of creating a dialog/frame with this window as a parent which would lead to a crash if the parent is destroyed before the child." />
      <option name="wxWS_EX_PROCESS_IDLE"           help="This window should always process idle events, even if the mode set by wxIdleEvent::SetMode is wxIDLE_PROCESS_SPECIFIED." />
      <option name="wxWS_EX_PROCESS_UI_UPDATES"     help="This window should always process UI update events, even if the mode set by wxUpdateUIEvent::SetMode is wxUPDATE_UI_PROCESS_SPECIFIED." />
    </property>
    <property name="tooltip" type="wxString_i18n"   help="Attach a tooltip to the window."/>
    <property name="enabled" type="bool"            help="Enable or disable the window for user input. Note that when a parent window is disabled, all of its children are disabled as well and they are reenabled again when the parent is.">1</property>
    <property name="hidden" type="bool"             help="Shows or hides the window.">0</property>
    <property name="subclass" type="parent" help="For easy use of custom widgets which are simple variations from standard ones, without requiring a new plugin for wxFB or a full xrc handler for wxWidgets. For C++, this replaces the name of the class. For XRC, this sets the subclass value on the object tag.">
		<child name="name" help="The name of the subclass."/>
		<child name="header" help="For C++ Only. The header to be included for the subclass."/>
	</property>
	<event name="OnUpdateUI" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI event." />
  </objectinfo>

  <objectinfo class="wxFrame" smallIcon="wxwindow.png" type="interface">
    <property name="title" type="wxString_i18n" />
    <property name="style" type="bitlist">
      <option name="wxDEFAULT_FRAME_STYLE" help="Defined as wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION | wxCLOSE_BOX | wxCLIP_CHILDREN" />
      <option name="wxICONIZE" help="Display the frame iconized (minimized). Windows only."/>
      <option name="wxCAPTION" help="Puts a caption on the frame."/>
      <option name="wxMINIMIZE" help="Identical to wxICONIZE. Windows only."/>
      <option name="wxMINIMIZE_BOX" help="Displays a minimize box on the frame."/>
      <option name="wxMAXIMIZE" help="Displays the frame maximized. Windows only."/>
      <option name="wxMAXIMIZE_BOX" help="Displays a maximize box on the frame." />
      <option name="wxCLOSE_BOX" help="Displays a close box on the frame." />
      <option name="wxSTAY_ON_TOP" help="Stay on top of all other windows, see also wxFRAME_FLOAT_ON_PARENT."/>
      <option name="wxSYSTEM_MENU" help="Displays a system menu."/>
      <option name="wxRESIZE_BORDER" help="Displays a resizeable border around the window."/>
      <option name="wxFRAME_TOOL_WINDOW" help="Causes a frame with a small titlebar to be created; the frame does not appear in the taskbar under Windows or GTK+."/>
      <option name="wxFRAME_NO_TASKBAR" help="Creates an otherwise normal frame but it does not appear in the taskbar under Windows or GTK+ (note that it will minimize to the desktop window under Windows which may seem strange to the users and thus it might be better to use this style only without wxMINIMIZE_BOX style). In wxGTK, the flag is respected only if GTK+ is at least version 2.2 and the window manager supports _NET_WM_STATE_SKIP_TASKBAR hint. Has no effect under other platforms."/>
      <option name="wxFRAME_FLOAT_ON_PARENT" help="The frame will always be on top of its parent (unlike wxSTAY_ON_TOP). A frame created with this style must have a non-NULL parent."/>
      <option name="wxFRAME_SHAPED" help="Windows with this style are allowed to have their shape changed with the SetShape method."/>
      wxDEFAULT_FRAME_STYLE
    </property>
    <property name="extra_style" type="bitlist">
      <option name="wxFRAME_EX_CONTEXTHELP" help="Under Windows, puts a query button on the caption. When pressed, Windows will go into a context-sensitive help mode and wxWidgets will send a wxEVT_HELP event if the user clicked on an application window. Note that this is an extended style and must be set by calling SetExtraStyle before Create is called (two-step construction). You cannot use this style together with wxMAXIMIZE_BOX or wxMINIMIZE_BOX, so you should use wxDEFAULT_FRAME_STYLE & ~ (wxMINIMIZE_BOX | wxMAXIMIZE_BOX) for the frames having this style (the dialogs don't have a minimize or a maximize box by default)"/>
      <option name="wxFRAME_EX_METAL" help="On Mac OS X, frames with this style will be shown with a metallic look. This is an extra style."/>
    </property>
    <property name="center" type="option"		help="Centers the dialog box on the display in the chosen direction.">
      <option name=""/>
      <option name="wxHORIZONTAL"/>
      <option name="wxVERTICAL"/>
      <option name="wxBOTH"/>
    </property>
    <property name="xrc_skip_sizer" type="bool" help="For XRC Only. Do not generate the first sizer if there is only one child.">1</property>
  </objectinfo>
  
  <objectinfo class="UserClasses" 	type="interface">
	<property name="name" type="text" />
	<property name="basename" type="text" />
	<property name="file" type="text"	/>
	<property name="gen_file" 		type="text"	/>
	<property name="type" 			type="text"	/>
  </objectinfo>
</package>
