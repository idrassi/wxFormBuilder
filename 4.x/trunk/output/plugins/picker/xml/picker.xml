<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com
-->
<package name="Picker" lib="libpicker" icon="filepicker.xpm" desc="wxWidgets Picker Controls">

	<objectinfo class="wxColourPickerCtrl" icon="clrpicker.xpm" type="widget">
		<inherits class="wxWindow"/>
		<property name="name" 	type="text">m_colourPicker</property>
		<property name="style" 	type="bitlist">
			<option name="wxCLRP_DEFAULT_STYLE" help="The default style: 0."/>
			<option name="wxCLRP_USE_TEXTCTRL" 	help="Creates a text control to the left of the picker button which is completely managed by the wxColourPickerCtrl and which can be used by the user to specify a colour. The text control is automatically synchronized with button's value. Use functions defined in wxPickerBase to modify the text control."/>
			<option name="wxCLRP_SHOW_LABEL" 	help="Shows the colour in HTML form (AABBCC) as colour button label (instead of no label at all)."/>
			wxCLRP_DEFAULT_STYLE
		</property>
		<property name="colour" type="wxColour"/>
		<event name="OnColourChanged" class="wxColourPickerEvent" help="The user changed the colour selected in the control either using the button or using text control (see wxCLRP_USE_TEXTCTRL; note that in this case the event is fired only if the user's input is valid, i.e. recognizable)."/>
	</objectinfo>

	<objectinfo class="wxDatePickerCtrl" icon="datectrl.xpm" type="widget">
		<inherits class="wxWindow" />
		<property name="name" 	type="text">m_datePicker</property>
		<property name="style" 	type="bitlist">
			<option name="wxDP_SPIN"        help="Creates a control without a month calendar drop down but with spin-control-like arrows to change individual date components. This style is not supported by the generic version." />
			<option name="wxDP_DROPDOWN"    help="Creates a control with a month calendar drop-down part from which the user can select a date." />
			<option name="wxDP_SHOWCENTURY" help="Forces display of the century in the default date format. Without this style the century could be displayed, or not, depending on the default date representation in the system." />
			<option name="wxDP_ALLOWNONE"   help="With this style, the control allows the user to not enter any valid date at all. Without it - the default - the control always has some valid date." />
			<option name="wxDP_DEFAULT"     help="Creates a control with the style that is best supported for the current platform (currently wxDP_SPIN under Windows and wxDP_DROPDOWN elsewhere)." />wxDP_DEFAULT</property>
		<event name="OnDateChanged" class="wxDateEvent" help="This event fires when the user changes the current selection in the control." />
	</objectinfo>

	<objectinfo class="wxDirPickerCtrl" icon="dirpicker.xpm" type="widget">
        <inherits class="wxWindow"/>
        <property name="name" 	type="text">m_dirPicker</property>
        <property name="style" 	type="bitlist">
			<option name="wxDIRP_DEFAULT_STYLE" 	help="The default style: includes wxDIRP_DIR_MUST_EXIST and, under wxMSW only, wxDIRP_USE_TEXTCTRL."/>
			<option name="wxDIRP_USE_TEXTCTRL" 		help="Creates a text control to the left of the picker button which is completely managed by the wxDirPickerCtrl and which can be used by the user to specify a path (see SetPath). The text control is automatically synchronized with button's value. Use functions defined in wxPickerBase to modify the text control."/>
			<option name="wxDIRP_DIR_MUST_EXIST" 	help="Creates a picker which allows to select only existing directories. wxGTK control always adds this flag internally as it does not support its absence."/>
			<option name="wxDIRP_CHANGE_DIR" 		help="Change current working directory on each user directory selection change."/>
			wxDIRP_DEFAULT_STYLE
        </property>
        <property name="value" 		type="wxString"/>
        <property name="message" 	type="wxString_i18n">Select a folder</property>
        <event name="OnDirChanged" 	class="wxFileDirPickerEvent" help="The user changed the directory selected in the control either using the button or using text control (see wxDIRP_USE_TEXTCTRL; note that in this case the event is fired only if the user's input is valid, e.g. an existing directory path)."/>
	</objectinfo>

	<objectinfo class="wxFilePickerCtrl" icon="filepicker.xpm" type="widget">
		<inherits class="wxWindow"/>
		<property name="name" 	type="text">m_filePicker</property>
		<property name="style" 	type="bitlist">
			<option name="wxFLP_DEFAULT_STYLE" 		help="The default style: includes wxFLP_OPEN | wxFLP_FILE_MUST_EXIST and, under wxMSW only, wxFLP_USE_TEXTCTRL."/>
			<option name="wxFLP_USE_TEXTCTRL" 		help="Creates a text control to the left of the picker button which is completely managed by the wxFilePickerCtrl and which can be used by the user to specify a path (see SetPath). The text control is automatically synchronized with button's value. Use functions defined in wxPickerBase to modify the text control."/>
			<option name="wxFLP_OPEN" 				help="Creates a picker which allows the user to select a file to open."/>
			<option name="wxFLP_SAVE" 				help="Creates a picker which allows the user to select a file to save."/>
			<option name="wxFLP_OVERWRITE_PROMPT" 	help="Can be combined with wxFLP_SAVE only: ask confirmation to the user before selecting a file."/>
			<option name="wxFLP_FILE_MUST_EXIST" 	help="Can be combined with wxFLP_OPEN only: the selected file must be an existing file."/>
			<option name="wxFLP_CHANGE_DIR" 		help="Change current working directory on each user file selection change."/>
			wxFLP_DEFAULT_STYLE
		</property>
		<property name="value" 		type="wxString"/>
		<property name="message" 	type="wxString_i18n">Select a file</property>
		<property name="wildcard"	type="wxString">*.*</property>
		<event name="OnFileChanged" class="wxFileDirPickerEvent" help="The user changed the file selected in the control either using the button or using text control (see wxFLP_USE_TEXTCTRL; note that in this case the event is fired only if the user's input is valid, e.g. an existing file path if wxFLP_FILE_MUST_EXIST was given)."/>
	</objectinfo>

	<objectinfo class="wxFontPickerCtrl" icon="fontpicker.xpm" type="widget">
		<inherits class="wxWindow"/>
		<property name="name" 	type="text">m_fontPicker</property>
		<property name="style" 	type="bitlist">
			<option name="wxFNTP_DEFAULT_STYLE" 	help="The default style: wxFNTP_FONTDESC_AS_LABEL | wxFNTP_USEFONT_FOR_LABEL."/>
			<option name="wxFNTP_USE_TEXTCTRL" 		help="Creates a text control to the left of the picker button which is completely managed by the wxFontPickerCtrl and which can be used by the user to specify a font (see SetSelectedFont). The text control is automatically synchronized with button's value. Use functions defined in wxPickerBase to modify the text control."/>
			<option name="wxFNTP_FONTDESC_AS_LABEL" help="Keeps the label of the button updated with the fontface name and the font size. E.g. choosing &quot;Times New Roman bold, italic with size 10&quot; from the fontdialog, will update the label (overwriting any previous label) with the &quot;Times New Roman, 10&quot; text."/>
			<option name="wxFNTP_USEFONT_FOR_LABEL" help="Uses the currently selected font to draw the label of the button."/>
			wxFNTP_DEFAULT_STYLE
		</property>
		<property name="value" type="wxFont"/>
		<property name="max_point_size" type="uint" help="Sets the maximum point size value allowed for the user-chosen font. The default value is 100. Note that big fonts can require a lot of memory and CPU time both for creation and for rendering; thus, specially because the user has the option to specify the fontsize through a text control (see wxFNTP_USE_TEXTCTRL), it's a good idea to put a limit to the maximum font size when huge fonts do not make much sense.">
		100
		</property>
		<event name="OnFontChanged" class="wxFontPickerEvent" help="The user changed the font selected in the control either using the button or using text control (see wxFNTP_USE_TEXTCTRL; note that in this case the event is fired only if the user's input is valid, i.e. recognizable)."/>
	</objectinfo>

</package>
