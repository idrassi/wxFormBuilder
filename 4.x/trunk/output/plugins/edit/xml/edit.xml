<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<package name="Edit" lib="libedit" icon="richtextctrl.xpm" desc="wxWidgets editing controls">

	<objectinfo class="wxPropertyGrid" icon="propgrid.xpm" type="expanded_widget">
		<inherits class="wxWindow" />
		<property name="style" type="bitlist">
			<option name="wxPG_AUTO_SORT" 				help="This will cause Sort() automatically after an item is added.
															    When inserting a lot of items in this mode, it may make sense to
															    use Freeze() before operations and Thaw() afterwards to increase
															    performance." />
			<option name="wxPG_HIDE_CATEGORIES"			help="Categories are not initially shown (even if added)."/>
			<option name="wxPG_ALPHABETIC_MODE"			help="This style combines non-categoric mode and automatic sorting."/>
			<option name="wxPG_BOLD_MODIFIED"			help="Modified values are shown in bold font."/>
			<option name="wxPG_SPLITTER_AUTO_CENTER"	help="When wxPropertyGrid is resized, splitter moves to the center.
																This behaviour stops once the user manually moves the splitter."/>
			<option name="wxPG_TOOLTIPS"				help="Display tooltips for cell text that cannot be shown completely.
	  															If wxUSE_TOOLTIPS is 0, then this doesn't have any effect."/>
			<option name="wxPG_HIDE_MARGIN"				help="Disables margin and hides all expand/collapse buttons that would appear
															    outside the margin (for sub-properties). Toggling this style automatically
															    expands all collapsed items."/>
			<option name="wxPG_STATIC_SPLITTER" 		help="This style prevents user from moving the splitter."/>
			<option name="wxPG_STATIC_LAYOUT"			help="Combination of other styles that make it impossible for user to modify the layout."/>
			<option name="wxPG_LIMITED_EDITING"			help="Disables wxTextCtrl based editors for properties which can be edited in another way."/>
			<option name="wxPG_DEFAULT_STYLE"			help="Combines various styles."/>
			<option name="wxTAB_TRAVERSAL"				help="wxTAB_TRAVERSAL allows using Tab/Shift-Tab to travel between properties
															    in grid. Travelling forwards from last property will navigate to the
															    next control, and backwards from first will navigate to the previous one."/>

			wxPG_DEFAULT_STYLE
		</property>
		<property name="extra_style" type="bitlist">
            <option name="wxPG_EX_INIT_NOCAT"			help="Speeds up switching to wxPG_HIDE_CATEGORIES mode. Initially, if wxPG_HIDE_CATEGORIES
															    is not defined, the non-categorized data storage is not activated, and switching
															    the mode first time becomes somewhat slower. wxPG_EX_INIT_NOCAT activates the
															    non-categorized data storage right away. IMPORTANT NOTE: If you do plan not
															    switching to non-categoric mode, or if you don't plan to use categories at
															    all, then using this style will result in waste of resources."/>
		</property>
		<property name="name" type="text">m_propertyGrid</property>
		<property name="include_advanced" type="bool" help="Include Advanced Properties">1</property>
	</objectinfo>

	<objectinfo class="wxRichTextCtrl" icon="richtextctrl.xpm" type="expanded_widget">
		<inherits class="wxWindow">
			<property name="window_style">wxVSCROLL|wxHSCROLL|wxNO_BORDER|wxWANTS_CHARS</property>
		</inherits>
		<property name="name" type="text">m_richText</property>
		<property name="style" type="bitlist">
			<option name="wxTE_PROCESS_ENTER" help="The control will generate the event wxEVT_COMMAND_TEXT_ENTER (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls)."/>
			<option name="wxTE_PROCESS_TAB"   help="The control will receive wxEVT_CHAR events for TAB pressed - normally, TAB is used for passing to the next control in a dialog instead. For the control created with this style, you can still use Ctrl-Enter to pass to the next control from the keyboard."/>
			<option name="wxTE_READONLY"      help="The text will not be user-editable."/>
			<option name="wxTE_AUTO_URL"      help="Highlight the URLs and generate the wxTextUrl events when mouse events occur over them."/>
		</property>
		<event name="OnText" 						class="wxCommandEvent" help="Respond to a wxEVT_COMMAND_TEXT_UPDATED event, generated when the text changes. Notice that this event will always be sent when the text controls contents changes - whether this is due to user input or comes from the program itself (for example, if SetValue() is called)" />
		<event name="OnTextEnter" 					class="wxCommandEvent" help="Respond to a wxEVT_COMMAND_TEXT_ENTER event, generated when enter is pressed in a text control (which must have wxTE_PROCESS_ENTER style for this event to be generated)." />
		<event name="OnTextURL" 					class="wxTextUrlEvent" help="A mouse event occurred over an URL in the text control (wxMSW and wxGTK2 only)" />
		<event name="OnTextMaxLen" 					class="wxCommandEvent" help="User tried to enter more text into the control than the limit set by SetMaxLength." />
		<event name="OnRichTextCharacter" 			class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_CHARACTER event, generated when the user presses a character key. Valid event functions: GetFlags, GetPosition, GetCharacter." />
		<event name="OnRichTextDelete" 				class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_DELETE event, generated when the user presses the backspace or delete key. Valid event functions: GetFlags, GetPosition." />
		<event name="OnRichTextReturn" 				class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_RETURN event, generated when the user presses the return key. Valid event functions: GetFlags, GetPosition." />
		<event name="OnRichTextStyleChanged" 		class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_STYLE_CHANGED event, generated when styling has been applied to the control. Valid event functions: GetPosition, GetRange." />
		<event name="OnRichTextStyleSheetChanged" 	class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_STYLESHEET_CHANGING event, generated when the control's stylesheet has changed, for example the user added, edited or deleted a style. Valid event functions: GetRange, GetPosition." />
		<event name="OnRichTextStyleSheetReplacing" class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_STYLESHEET_REPLACING event, generated when the control's stylesheet is about to be replaced, for example when a file is loaded into the control. Valid event functions: Veto, GetOldStyleSheet, GetNewStyleSheet." />
		<event name="OnRichTextStyleSheetReplaced" 	class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_STYLESHEET_REPLACED event, generated when the control's stylesheet has been replaced, for example when a file is loaded into the control. Valid event functions: GetOldStyleSheet, GetNewStyleSheet." />
		<event name="OnRichTextContentInserted" 	class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_CONTENT_INSERTED event, generated when content has been inserted into the control. Valid event functions: GetPosition, GetRange." />
		<event name="OnRichTextContentDeleted" 		class="wxCommandEvent" help="Process a wxEVT_COMMAND_RICHTEXT_CONTENT_DELETED event, generated when content has been deleted from the control. Valid event functions: GetPosition, GetRange." />
	</objectinfo>

	<objectinfo class="wxStyledTextCtrl" icon="scintilla.xpm" smallicon="scintilla_24.xpm" type="expanded_widget">
		<inherits class="wxWindow" />
		<property name="name" 					type="text" >m_stc</property>
		<property name="folding" 				type="bool" help="Enable folding.">1</property>
		<property name="line_numbers" 			type="bool" help="Show line numbers.">1</property>
		<property name="indentation_guides" 	type="bool" help="Show indentation guides.">1</property>
		<property name="tab_indents" 			type="bool" help="The tab key always indents, use tabs or spaces, instead of always inserting a tab character.">1</property>
		<property name="backspace_unindents" 	type="bool" help="The backspace key unindents, instead of just deleting one space.">1</property>
		<property name="view_eol" 				type="bool" help="Show end of line characters.">0</property>
		<property name="view_whitespace" 		type="bool" help="Show whitespace characters.">0</property>
		<property name="use_tabs" 				type="bool" help="Use tabs for indenting, instead of spaces.">1</property>
		<property name="tab_width" 				type="text" help="The number of spaces per tab character.">4</property>
	</objectinfo>

</package>
